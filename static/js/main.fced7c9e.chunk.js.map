{"version":3,"sources":["components/section.jsx/Section.module.scss","components/feedback-options/FeedbackOptions.module.scss","components/section.jsx/Section.jsx","components/feedback-options/FeedbackOptions.jsx","components/notification/Notification.jsx","components/statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOptions","options","onLeaveFeedback","feedbackOptions","length","map","btn","key","id","onClick","value","name","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","useState","state","setState","useMemo","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,gBAAkB,2C,6KCYrBC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BAASC,UAAWC,IAAOC,SACzB,4BAAKJ,GACJC,I,gBCYQI,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,yBAAKL,UAAWC,IAAOK,iBACpBF,GACCA,EAAQG,QACRH,EAAQI,KAAI,SAACC,GACX,OACE,4BAAQC,IAAKD,EAAIE,GAAIC,QAAS,kBAAMP,EAAgBI,EAAII,SACrDJ,EAAIK,WCNJC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,2BAAIA,ICoBEC,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACGD,GAAmB,IAAVA,EACR,6BACE,0CACA,sCAAYH,GACZ,yCAAeC,GACf,qCAAWC,GACX,uCAAaC,GACb,mDAAyBC,EAAzB,OAGF,kBAAC,EAAD,CAAcN,QAAQ,wBCqCfO,MAhDf,WACE,MAA0BC,mBAAS,CACjCN,KAAM,EACNC,QAAS,EACTC,IAAK,IAHP,mBAAOK,EAAP,KAAcC,EAAd,KAMMtB,EAAUuB,mBACd,iBAAM,CACJ,CAAEhB,GAAI,QAASG,KAAM,OAAQD,MAAO,QACpC,CAAEF,GAAI,QAASG,KAAM,UAAWD,MAAO,WACvC,CAAEF,GAAI,QAASG,KAAM,MAAOD,MAAO,UAErC,IAOIe,EAAqB,WACzB,OAAOH,EAAMP,KAAOO,EAAMN,QAAUM,EAAML,KAQtCC,EAAQO,IACRN,EANkC,WACtC,IAAMD,EAAQO,IACd,OAAOC,KAAKC,MAAO,IAAMT,EAASI,EAAMP,MAIfa,GAE3B,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,CAASF,MAAM,yBACb,kBAAC,EAAD,CAAiBM,QAASA,EAASC,gBAnBjB,SAACQ,GACvBa,GAAS,SAACM,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBnB,EAAQmB,EAAKnB,GAAS,UAmBlD,kBAAC,EAAD,CACEK,KAAMO,EAAMP,KACZC,QAASM,EAAMN,QACfC,IAAKK,EAAML,IACXC,MAAOA,EACPC,mBAAoBA,OC1C9BW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fced7c9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3-9Ug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"FeedbackOptions_feedbackOptions__3pECt\"};","import React from \"react\";\r\n\r\nimport styles from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./FeedbackOptions.module.scss\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.feedbackOptions}>\r\n      {options &&\r\n        options.length &&\r\n        options.map((btn) => {\r\n          return (\r\n            <button key={btn.id} onClick={() => onLeaveFeedback(btn.value)}>\r\n              {btn.name}\r\n            </button>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nimport Notification from \"../notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total && total !== 0 ? (\r\n        <div>\r\n          <h2>Statistics</h2>\r\n          <div>Good: {good}</div>\r\n          <div>Neutral: {neutral}</div>\r\n          <div>Bad: {bad}</div>\r\n          <div>Total: {total}</div>\r\n          <div>Positive feedback: {positivePercentage} %</div>\r\n        </div>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState, useMemo } from \"react\";\n\nimport Section from \"./components/section.jsx/Section\";\nimport FeedbackOptions from \"./components/feedback-options/FeedbackOptions\";\nimport Statistics from \"./components/statistics/Statistics\";\n\nfunction App() {\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const options = useMemo(\n    () => [\n      { id: \"opt-1\", name: \"Good\", value: \"good\" },\n      { id: \"opt-2\", name: \"Neutral\", value: \"neutral\" },\n      { id: \"opt-3\", name: \"Bad\", value: \"bad\" },\n    ],\n    []\n  );\n\n  const feedbackHandler = (value) => {\n    setState((prev) => ({ ...prev, [value]: prev[value] + 1 }));\n  };\n\n  const countTotalFeedback = () => {\n    return state.good + state.neutral + state.bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round((100 / total) * state.good);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={feedbackHandler} />\n        <Statistics\n          good={state.good}\n          neutral={state.neutral}\n          bad={state.bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}